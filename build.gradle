// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.+'
    }
}


apply plugin: 'android'

repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.android.support:support-v4:19.0.+'
    compile 'com.android.support:appcompat-v7:+'
    compile project(':libraries:ViewPagerIndicator')
    compile project(':libraries:gif-library')
    compile project(':libraries:android-switch-backport')
    compile project(':libraries:MainLibs')
    compile project(':libraries:OneKeyShare')
    compile project(':libraries:supertoasts')
    compile project(':libraries:SwipeBackLayout')
}




android {
    compileSdkVersion 19
    buildToolsVersion '19.0.1'
    
    signingConfigs {
        release {
            storeFile file("AnimeTasteKey")
            storePassword "410831497"
            keyAlias "AnimeTaste"
            keyPassword "410831497"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            zipAlign true
        }
    }

    //渠道
    productFlavors {
        XiaoMi{}
        
    }

    lintOptions {  
          abortOnError false
    }
    sourceSets {
        main{
            assets {
                srcDir 'assets'
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    android.applicationVariants.all{ variant -> 
        println "${variant.productFlavors[0].name}"
        variant.processManifest.doLast{
            copy{
                from("${buildDir}/manifests"){
                    include "${variant.dirName}/AndroidManifest.xml"
                }
                into("${buildDir}/manifests/$variant.name")

                filter{
                    String line -> line.replaceAll("UMENG_CHANNEL_VALUE", "${variant.productFlavors[0].name}")
                }

                variant.processResources.manifestFile = file("${buildDir}/manifests/${variant.name}/${variant.dirName}/AndroidManifest.xml")
            }    
       }
    }
}
